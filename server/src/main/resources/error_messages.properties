# Error messages generated across the whole application.
#
# The message associated to this code describe the error in a technical way.
# It must help to troubleshoot the issue.
#
# Additionally, a description can be provided for some errors. The code of this description is description.{code}
# This description is intended to be displayed to the end-user and guide him to the next step.
#
# /!\ The message code is also used as an error identifier that is sent to the clients.
# Therefor
#

# Configuration errors.

config.invalid=There is one or more errors in your configuration. Check the log messages at startup to find more details.
config.missing=Must be present.
config.empty=Must not be empty of blank.
config.invalid_boolean=Must be a boolean. Either true or false.
config.invalid_int=Must be an integer.
config.invalid_enum_value={value} is not supported. Must be one of {supportedValues}.
config.invalid_url=Must be a valid URL, including non-empty scheme and host.
config.invalid_duration=Must be a duration. Accepted temporal units are h, m and s. Ex. 1h, 30m, 10s.
config.unsupported_generation_algorithm={algorithm} is not supported. Available algorithms are {algorithms}.

config.advanced.jwt.public_alg.unsupported_public_key=Public algorithm must support a public key that we must disclose for clients to validate token issued by this application. Available algorithm are {algorithms}.
config.advanced.hash.invalid_cost_parameter=Cost parameter must be > 1 and < 65536 and a power of 2.
config.advanced.hash.invalid_block_size=Block size must be > 0.
config.advanced.hash.invalid_parallelization_parameter=Parallelization parameter must be > 0 and <= {max}.
config.advanced.hash.invalid_salt_length=Salt length must be > 0 and a multiple of 8.
config.advanced.hash.invalid_key_length=Key length must be > 0.
config.advanced.validation_code.invalid_length=Length must be > 0.

config.auth.missing=No authentication method configured.

config.claim.email.disabled=Email claim MUST be enabled when advanced.keys-generation-strategy is set to by-mail.
config.claim.allowed_values.invalid_type=Allowed value must be of type {type}.

config.client.claim.invalid=Claim {claim} has not been configured or has been disabled.
config.client.authorization_flow.invalid=Authorization flow {flow} has not been configured. Available flows are {flows}.

config.features.email_validation.no_sender=An email sender must be configured (through javamail configuration keys) to enable email validation.

config.provider.user_info.missing=No user info endpoint configured.
config.provider.user_info.invalid_value=Must be a valid JSONPath.
config.provider.user_info.missing_subject_key=At least the sub key must be configured to obtain the user identifier from the provider.
config.provider.user_info.missing_email_key=The email key must be present to allow users to be merged using their emails. If you do not want this behavior, change the sympauthy.user-merging-strategy to none.

exception.validation.invalid=Invalid parameter(s) or body.
description.server_error=An unexpected error occurred while processing your request. Please retry later.

# Generic errors

internal_server_error=Internal server error.
description.internal_server_error=An unexpected error occurred while processing your request. Please contact the support of the application to report this issue.
unauthorized=Unauthorized
description.unauthorized=The access to this resource is protected. Please authenticate before retrying.
forbidden=Forbidden
not_found=Not found
description.not_found=The resource you are looking for is not available on this authorization server.
bad_request=The request is invalid and cannot be processed by the server.
description.bad_request=An unexpected error occurred while processing your request. Please contact the support of the application to report this issue.

# Authentication

authentication.wrong=The authentication method you are using is not supported by the resource.

# OAuth2 errors

description.oauth2.invalid=The calling application does not conform to the authentication protocol. The authentication cannot continue. Please contact the support of the application to report this issue.
description.oauth2.replay=For security measure, we prevent the authentication to be replayed. Please go back to your application and try to sign-up again.
description.oauth2.invalid_state=We detected the authentication process has been tempered. For security measure, we will prevent the authentication to continue. Please go back to your application and try to sign-up again.
description.oauth2.expired=For security purpose, you must complete the authentication under {expiration}. Please go back to your application and try to sign-in again.

# Resources exceptions

authorize.unsupported_response_type={responseType} is not supported. Supported response types are code and client_credentials.
authorize.client_id.missing=This request requires the client_id query param to be present and non-blank.
authorize.client_id.invalid=The client {clientId} is unknown to this authorization server.
authorize.scope.missing=This request requires the scope query param to be present and non-blank.
authorize.redirect_uri.missing=This request requires the redirect_uri query param to be present and non-blank.
authorize.redirect_uri.invalid=Redirect URI is missing or malformed.
authorize.existing_state=The state has already been used for a previous authentication.
authorize.state.missing=This request requires the state query param to be present and non-blank.
authorize.state.wrong_signature=Wrong signature. The state does not seem to have been issued by this authorization server.
authorize.state.invalid_subject=Invalid subject. The state does not seem to have been issued by this authorization server.
authorize.state.expired=The state has expired.

code.already_generated=An authorization code has already been generated.

token.missing_param=Parameter {param} is missing from the body. Must be present and non-blank.
token.unsupported_grant_type=Grant type {grantType} is not supported. Supported grant types are authorization_code and refresh_token.

# Errors thrown by the logic in the business package.
#
# The initial format for errors throws by the business logic is the following:
# <last package>(.<word identifying the manager>)?(.<word identifying the method>)?.<description>
#

claim.validate.invalid_value = Value is not allowed.
claim.validate.invalid_email=Must be a valid email.
claim.validate.invalid_type=Invalid type, expected value to be of type {type}.
claim.validate.invalid_date=Excepted date to be formatted as YYYY-MM-DD, according to ISO8601-1.
claim.validate.invalid_timezone=Must be a valid timezone.
claim.validate.unsupported_type=Unsupported type.

jwt.malformed=The JWT token is malformed and cannot be decoded.
jwt.expired=The JWT token is expired.
jwt.invalid_key=Failed to initialize algorithm with key {name}.
jwt.invalid_signature=The JWT token has not been issued by this application.

keyalgorithm.public_key.unsupported=The algorithm does not support a public key.
key.unsupported_key_spec=Key spec {keySpec} is not supported. Unable to deserialize key {name}.
key.missing_public_key=Public key is missing for key {name}.

flow.claim_validation.invalid_code=Invalid validation code.
flow.claim_validation.expired_code=Code has expired.
flow.password.sign_in.invalid=Invalid login or password.
flow.password.sign_in.disabled=Sign-in using a password is disabled on this authorization server.
flow.password.sign_up.existing=Another account exists.
flow.password.sign_up.missing_claim=The {claim} is required to sign-up.

provider.missing=The selected authorization client is not supported by this authorization server.

provider.oauth2.unsupported=The selected authentication provider does not support OAuth2 authorization code flow.

provider.user_info.missing_subject=Unable to match internal user since provider {providerId} did not provide user identifier.

scope.unsupported=Scope {scope} is not supported.

token.attempt_missing_user=There is no user associated to this authentication.
token.revoked=The JWT token has been revoked.
token.invalid_token_id=The JWT token has not been issued by this authorization server.
token.mismatching_client=The token has been issued for another client. It can only be refreshed using the same client used for its creation.

user.create_with_provider.missing_email={providerId} did not provide email for the end-user. This is not compatible with the user-merging-strategy. Check the scope and the user-info paths configured for this provider.
user.create_with_provider.missing_email_claim=The email claim must be enabled to support by-mail user merging strategy.

validationcode.missing_sender=No sender configured for media {media}.
validationcode.missing_claim=Missing required claim ${media.claim} for media ${media}.

# Authentication flow controller errors
# All keys must be prefixed by flow.

flow.user.missing = No user associated to this authorize attempt. Make sure the user has properly signed-in/up before accessing this resource.
flow.claims.invalid = One or more values are invalid.
flow.claims.missing_required = A required claim is missing.
